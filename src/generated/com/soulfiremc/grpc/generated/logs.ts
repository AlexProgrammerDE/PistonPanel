// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "com/soulfiremc/grpc/generated/logs.proto" (package "com.soulfiremc.grpc.generated", syntax proto3)
// tslint:disable
import {ServiceType} from "@protobuf-ts/runtime-rpc";
import {MessageType} from "@protobuf-ts/runtime";

/**
 * @generated from protobuf message com.soulfiremc.grpc.generated.LogRequest
 */
export interface LogRequest {
  /**
   * @generated from protobuf field: uint32 previous = 1;
   */
  previous: number;
}

/**
 * @generated from protobuf message com.soulfiremc.grpc.generated.LogResponse
 */
export interface LogResponse {
  /**
   * @generated from protobuf field: string message = 1;
   */
  message: string;
}

// @generated message type with reflection information, may provide speed optimized methods
class LogRequest$Type extends MessageType<LogRequest> {
  constructor() {
    super("com.soulfiremc.grpc.generated.LogRequest", [
      {no: 1, name: "previous", kind: "scalar", T: 13 /*ScalarType.UINT32*/}
    ]);
  }
}

/**
 * @generated MessageType for protobuf message com.soulfiremc.grpc.generated.LogRequest
 */
export const LogRequest = new LogRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class LogResponse$Type extends MessageType<LogResponse> {
  constructor() {
    super("com.soulfiremc.grpc.generated.LogResponse", [
      {no: 1, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/}
    ]);
  }
}

/**
 * @generated MessageType for protobuf message com.soulfiremc.grpc.generated.LogResponse
 */
export const LogResponse = new LogResponse$Type();
/**
 * @generated ServiceType for protobuf service com.soulfiremc.grpc.generated.LogsService
 */
export const LogsService = new ServiceType("com.soulfiremc.grpc.generated.LogsService", [
  {name: "subscribe", serverStreaming: true, options: {}, I: LogRequest, O: LogResponse}
]);
