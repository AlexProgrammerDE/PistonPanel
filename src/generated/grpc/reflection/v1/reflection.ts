/* eslint-disable */
// @generated by protobuf-ts 2.9.6 with parameter long_type_string,optimize_code_size,eslint_disable,ts_nocheck
// @generated from protobuf file "grpc/reflection/v1/reflection.proto" (package "grpc.reflection.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
//
// Copyright 2016 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
// Service exported by server reflection.  A more complete description of how
// server reflection works can be found at
// https://github.com/grpc/grpc/blob/master/doc/server-reflection.md
//
// The canonical version of this proto can be found at
// https://github.com/grpc/grpc-proto/blob/master/grpc/reflection/v1/reflection.proto
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * The message sent by the client when calling ServerReflectionInfo method.
 *
 * @generated from protobuf message grpc.reflection.v1.ServerReflectionRequest
 */
export interface ServerReflectionRequest {
    /**
     * @generated from protobuf field: string host = 1;
     */
    host: string;
    /**
     * @generated from protobuf oneof: message_request
     */
    messageRequest: {
        oneofKind: "fileByFilename";
        /**
         * Find a proto file by the file name.
         *
         * @generated from protobuf field: string file_by_filename = 3;
         */
        fileByFilename: string;
    } | {
        oneofKind: "fileContainingSymbol";
        /**
         * Find the proto file that declares the given fully-qualified symbol name.
         * This field should be a fully-qualified symbol name
         * (e.g. <package>.<service>[.<method>] or <package>.<type>).
         *
         * @generated from protobuf field: string file_containing_symbol = 4;
         */
        fileContainingSymbol: string;
    } | {
        oneofKind: "fileContainingExtension";
        /**
         * Find the proto file which defines an extension extending the given
         * message type with the given field number.
         *
         * @generated from protobuf field: grpc.reflection.v1.ExtensionRequest file_containing_extension = 5;
         */
        fileContainingExtension: ExtensionRequest;
    } | {
        oneofKind: "allExtensionNumbersOfType";
        /**
         * Finds the tag numbers used by all known extensions of the given message
         * type, and appends them to ExtensionNumberResponse in an undefined order.
         * Its corresponding method is best-effort: it's not guaranteed that the
         * reflection service will implement this method, and it's not guaranteed
         * that this method will provide all extensions. Returns
         * StatusCode::UNIMPLEMENTED if it's not implemented.
         * This field should be a fully-qualified type name. The format is
         * <package>.<type>
         *
         * @generated from protobuf field: string all_extension_numbers_of_type = 6;
         */
        allExtensionNumbersOfType: string;
    } | {
        oneofKind: "listServices";
        /**
         * List the full names of registered services. The content will not be
         * checked.
         *
         * @generated from protobuf field: string list_services = 7;
         */
        listServices: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * The type name and extension number sent by the client when requesting
 * file_containing_extension.
 *
 * @generated from protobuf message grpc.reflection.v1.ExtensionRequest
 */
export interface ExtensionRequest {
    /**
     * Fully-qualified type name. The format should be <package>.<type>
     *
     * @generated from protobuf field: string containing_type = 1;
     */
    containingType: string;
    /**
     * @generated from protobuf field: int32 extension_number = 2;
     */
    extensionNumber: number;
}
/**
 * The message sent by the server to answer ServerReflectionInfo method.
 *
 * @generated from protobuf message grpc.reflection.v1.ServerReflectionResponse
 */
export interface ServerReflectionResponse {
    /**
     * @generated from protobuf field: string valid_host = 1;
     */
    validHost: string;
    /**
     * @generated from protobuf field: grpc.reflection.v1.ServerReflectionRequest original_request = 2;
     */
    originalRequest?: ServerReflectionRequest;
    /**
     * @generated from protobuf oneof: message_response
     */
    messageResponse: {
        oneofKind: "fileDescriptorResponse";
        /**
         * This message is used to answer file_by_filename, file_containing_symbol,
         * file_containing_extension requests with transitive dependencies.
         * As the repeated label is not allowed in oneof fields, we use a
         * FileDescriptorResponse message to encapsulate the repeated fields.
         * The reflection service is allowed to avoid sending FileDescriptorProtos
         * that were previously sent in response to earlier requests in the stream.
         *
         * @generated from protobuf field: grpc.reflection.v1.FileDescriptorResponse file_descriptor_response = 4;
         */
        fileDescriptorResponse: FileDescriptorResponse;
    } | {
        oneofKind: "allExtensionNumbersResponse";
        /**
         * This message is used to answer all_extension_numbers_of_type requests.
         *
         * @generated from protobuf field: grpc.reflection.v1.ExtensionNumberResponse all_extension_numbers_response = 5;
         */
        allExtensionNumbersResponse: ExtensionNumberResponse;
    } | {
        oneofKind: "listServicesResponse";
        /**
         * This message is used to answer list_services requests.
         *
         * @generated from protobuf field: grpc.reflection.v1.ListServiceResponse list_services_response = 6;
         */
        listServicesResponse: ListServiceResponse;
    } | {
        oneofKind: "errorResponse";
        /**
         * This message is used when an error occurs.
         *
         * @generated from protobuf field: grpc.reflection.v1.ErrorResponse error_response = 7;
         */
        errorResponse: ErrorResponse;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Serialized FileDescriptorProto messages sent by the server answering
 * a file_by_filename, file_containing_symbol, or file_containing_extension
 * request.
 *
 * @generated from protobuf message grpc.reflection.v1.FileDescriptorResponse
 */
export interface FileDescriptorResponse {
    /**
     * Serialized FileDescriptorProto messages. We avoid taking a dependency on
     * descriptor.proto, which uses proto2 only features, by making them opaque
     * bytes instead.
     *
     * @generated from protobuf field: repeated bytes file_descriptor_proto = 1;
     */
    fileDescriptorProto: Uint8Array[];
}
/**
 * A list of extension numbers sent by the server answering
 * all_extension_numbers_of_type request.
 *
 * @generated from protobuf message grpc.reflection.v1.ExtensionNumberResponse
 */
export interface ExtensionNumberResponse {
    /**
     * Full name of the base type, including the package name. The format
     * is <package>.<type>
     *
     * @generated from protobuf field: string base_type_name = 1;
     */
    baseTypeName: string;
    /**
     * @generated from protobuf field: repeated int32 extension_number = 2;
     */
    extensionNumber: number[];
}
/**
 * A list of ServiceResponse sent by the server answering list_services request.
 *
 * @generated from protobuf message grpc.reflection.v1.ListServiceResponse
 */
export interface ListServiceResponse {
    /**
     * The information of each service may be expanded in the future, so we use
     * ServiceResponse message to encapsulate it.
     *
     * @generated from protobuf field: repeated grpc.reflection.v1.ServiceResponse service = 1;
     */
    service: ServiceResponse[];
}
/**
 * The information of a single service used by ListServiceResponse to answer
 * list_services request.
 *
 * @generated from protobuf message grpc.reflection.v1.ServiceResponse
 */
export interface ServiceResponse {
    /**
     * Full name of a registered service, including its package name. The format
     * is <package>.<service>
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * The error code and error message sent by the server when an error occurs.
 *
 * @generated from protobuf message grpc.reflection.v1.ErrorResponse
 */
export interface ErrorResponse {
    /**
     * This field uses the error codes defined in grpc::StatusCode.
     *
     * @generated from protobuf field: int32 error_code = 1;
     */
    errorCode: number;
    /**
     * @generated from protobuf field: string error_message = 2;
     */
    errorMessage: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ServerReflectionRequest$Type extends MessageType<ServerReflectionRequest> {
    constructor() {
        super("grpc.reflection.v1.ServerReflectionRequest", [
            { no: 1, name: "host", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "file_by_filename", kind: "scalar", oneof: "messageRequest", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "file_containing_symbol", kind: "scalar", oneof: "messageRequest", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "file_containing_extension", kind: "message", oneof: "messageRequest", T: () => ExtensionRequest },
            { no: 6, name: "all_extension_numbers_of_type", kind: "scalar", oneof: "messageRequest", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "list_services", kind: "scalar", oneof: "messageRequest", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ServerReflectionRequest
 */
export const ServerReflectionRequest = new ServerReflectionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtensionRequest$Type extends MessageType<ExtensionRequest> {
    constructor() {
        super("grpc.reflection.v1.ExtensionRequest", [
            { no: 1, name: "containing_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "extension_number", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ExtensionRequest
 */
export const ExtensionRequest = new ExtensionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerReflectionResponse$Type extends MessageType<ServerReflectionResponse> {
    constructor() {
        super("grpc.reflection.v1.ServerReflectionResponse", [
            { no: 1, name: "valid_host", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "original_request", kind: "message", T: () => ServerReflectionRequest },
            { no: 4, name: "file_descriptor_response", kind: "message", oneof: "messageResponse", T: () => FileDescriptorResponse },
            { no: 5, name: "all_extension_numbers_response", kind: "message", oneof: "messageResponse", T: () => ExtensionNumberResponse },
            { no: 6, name: "list_services_response", kind: "message", oneof: "messageResponse", T: () => ListServiceResponse },
            { no: 7, name: "error_response", kind: "message", oneof: "messageResponse", T: () => ErrorResponse }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ServerReflectionResponse
 */
export const ServerReflectionResponse = new ServerReflectionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FileDescriptorResponse$Type extends MessageType<FileDescriptorResponse> {
    constructor() {
        super("grpc.reflection.v1.FileDescriptorResponse", [
            { no: 1, name: "file_descriptor_proto", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.FileDescriptorResponse
 */
export const FileDescriptorResponse = new FileDescriptorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtensionNumberResponse$Type extends MessageType<ExtensionNumberResponse> {
    constructor() {
        super("grpc.reflection.v1.ExtensionNumberResponse", [
            { no: 1, name: "base_type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "extension_number", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ExtensionNumberResponse
 */
export const ExtensionNumberResponse = new ExtensionNumberResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServiceResponse$Type extends MessageType<ListServiceResponse> {
    constructor() {
        super("grpc.reflection.v1.ListServiceResponse", [
            { no: 1, name: "service", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServiceResponse }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ListServiceResponse
 */
export const ListServiceResponse = new ListServiceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServiceResponse$Type extends MessageType<ServiceResponse> {
    constructor() {
        super("grpc.reflection.v1.ServiceResponse", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ServiceResponse
 */
export const ServiceResponse = new ServiceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ErrorResponse$Type extends MessageType<ErrorResponse> {
    constructor() {
        super("grpc.reflection.v1.ErrorResponse", [
            { no: 1, name: "error_code", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "error_message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message grpc.reflection.v1.ErrorResponse
 */
export const ErrorResponse = new ErrorResponse$Type();
/**
 * @generated ServiceType for protobuf service grpc.reflection.v1.ServerReflection
 */
export const ServerReflection = new ServiceType("grpc.reflection.v1.ServerReflection", [
    { name: "ServerReflectionInfo", serverStreaming: true, clientStreaming: true, options: {}, I: ServerReflectionRequest, O: ServerReflectionResponse }
]);
