/* eslint-disable */
// @generated by protobuf-ts 2.9.6 with parameter long_type_string,optimize_code_size,eslint_disable,ts_nocheck
// @generated from protobuf file "pistonpanel/instance.proto" (package "pistonpanel.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from '@protobuf-ts/runtime-rpc';
import { MessageType } from '@protobuf-ts/runtime';
import { Timestamp } from '../google/protobuf/timestamp';
import { InstancePermission } from './common';

/**
 * @generated from protobuf message pistonpanel.v1.InstanceUser
 */
export interface InstanceUser {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: string username = 2;
   */
  username: string;
  /**
   * @generated from protobuf field: string email = 3;
   */
  email: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceCreateRequest
 */
export interface InstanceCreateRequest {
  /**
   * @generated from protobuf field: string friendlyName = 1;
   */
  friendlyName: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceCreateResponse
 */
export interface InstanceCreateResponse {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceDeleteRequest
 */
export interface InstanceDeleteRequest {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceDeleteResponse
 */
export interface InstanceDeleteResponse {}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceListRequest
 */
export interface InstanceListRequest {}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceListResponse
 */
export interface InstanceListResponse {
  /**
   * @generated from protobuf field: repeated pistonpanel.v1.InstanceListResponse.Instance instances = 1;
   */
  instances: InstanceListResponse_Instance[];
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceListResponse.Instance
 */
export interface InstanceListResponse_Instance {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: string friendly_name = 2;
   */
  friendlyName: string;
  /**
   * @generated from protobuf field: string icon = 5;
   */
  icon: string;
  /**
   * @generated from protobuf field: pistonpanel.v1.InstanceState state = 3;
   */
  state: InstanceState;
  /**
   * @generated from protobuf field: repeated pistonpanel.v1.InstancePermissionState instance_permissions = 4;
   */
  instancePermissions: InstancePermissionState[];
}

/**
 * @generated from protobuf message pistonpanel.v1.InstancePermissionState
 */
export interface InstancePermissionState {
  /**
   * @generated from protobuf field: pistonpanel.v1.InstancePermission instance_permission = 1;
   */
  instancePermission: InstancePermission;
  /**
   * @generated from protobuf field: bool granted = 2;
   */
  granted: boolean;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceInfoRequest
 */
export interface InstanceInfoRequest {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceInfoResponse
 */
export interface InstanceInfoResponse {
  /**
   * @generated from protobuf field: string friendly_name = 1;
   */
  friendlyName: string;
  /**
   * @generated from protobuf field: string icon = 5;
   */
  icon: string;
  /**
   * @generated from protobuf field: pistonpanel.v1.InstanceState state = 3;
   */
  state: InstanceState;
  /**
   * @generated from protobuf field: repeated pistonpanel.v1.InstancePermissionState instance_permissions = 4;
   */
  instancePermissions: InstancePermissionState[];
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceUpdateMetaRequest
 */
export interface InstanceUpdateMetaRequest {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf oneof: meta
   */
  meta:
    | {
        oneofKind: 'friendlyName';
        /**
         * @generated from protobuf field: string friendly_name = 2;
         */
        friendlyName: string;
      }
    | {
        oneofKind: 'icon';
        /**
         * @generated from protobuf field: string icon = 3;
         */
        icon: string;
      }
    | {
        oneofKind: undefined;
      };
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceUpdateMetaResponse
 */
export interface InstanceUpdateMetaResponse {}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceStateChangeRequest
 */
export interface InstanceStateChangeRequest {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: pistonpanel.v1.InstanceState state = 2;
   */
  state: InstanceState;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceStateChangeResponse
 */
export interface InstanceStateChangeResponse {}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceAuditLogRequest
 */
export interface InstanceAuditLogRequest {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceAuditLogResponse
 */
export interface InstanceAuditLogResponse {
  /**
   * @generated from protobuf field: repeated pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntry entry = 1;
   */
  entry: InstanceAuditLogResponse_AuditLogEntry[];
}

/**
 * @generated from protobuf message pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntry
 */
export interface InstanceAuditLogResponse_AuditLogEntry {
  /**
   * @generated from protobuf field: string id = 1;
   */
  id: string;
  /**
   * @generated from protobuf field: pistonpanel.v1.InstanceUser user = 2;
   */
  user?: InstanceUser;
  /**
   * @generated from protobuf field: pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntryType type = 3;
   */
  type: InstanceAuditLogResponse_AuditLogEntryType;
  /**
   * @generated from protobuf field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;
  /**
   * @generated from protobuf field: string data = 5;
   */
  data: string;
}

/**
 * @generated from protobuf enum pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntryType
 */
export enum InstanceAuditLogResponse_AuditLogEntryType {
  /**
   * @generated from protobuf enum value: EXECUTE_COMMAND = 0;
   */
  EXECUTE_COMMAND = 0,
  /**
   * @generated from protobuf enum value: START_ATTACK = 1;
   */
  START_ATTACK = 1,
  /**
   * @generated from protobuf enum value: PAUSE_ATTACK = 2;
   */
  PAUSE_ATTACK = 2,
  /**
   * @generated from protobuf enum value: RESUME_ATTACK = 3;
   */
  RESUME_ATTACK = 3,
  /**
   * @generated from protobuf enum value: STOP_ATTACK = 4;
   */
  STOP_ATTACK = 4,
}

/**
 * @generated from protobuf enum pistonpanel.v1.InstanceState
 */
export enum InstanceState {
  /**
   * @generated from protobuf enum value: STARTING = 0;
   */
  STARTING = 0,
  /**
   * @generated from protobuf enum value: RUNNING = 1;
   */
  RUNNING = 1,
  /**
   * @generated from protobuf enum value: PAUSED = 2;
   */
  PAUSED = 2,
  /**
   * @generated from protobuf enum value: STOPPING = 3;
   */
  STOPPING = 3,
  /**
   * @generated from protobuf enum value: STOPPED = 4;
   */
  STOPPED = 4,
}

// @generated message type with reflection information, may provide speed optimized methods
class InstanceUser$Type extends MessageType<InstanceUser> {
  constructor() {
    super('pistonpanel.v1.InstanceUser', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: 'username', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 3, name: 'email', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceUser
 */
export const InstanceUser = new InstanceUser$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceCreateRequest$Type extends MessageType<InstanceCreateRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceCreateRequest', [
      {
        no: 1,
        name: 'friendlyName',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceCreateRequest
 */
export const InstanceCreateRequest = new InstanceCreateRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceCreateResponse$Type extends MessageType<InstanceCreateResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceCreateResponse', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceCreateResponse
 */
export const InstanceCreateResponse = new InstanceCreateResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceDeleteRequest$Type extends MessageType<InstanceDeleteRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceDeleteRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceDeleteRequest
 */
export const InstanceDeleteRequest = new InstanceDeleteRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceDeleteResponse$Type extends MessageType<InstanceDeleteResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceDeleteResponse', []);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceDeleteResponse
 */
export const InstanceDeleteResponse = new InstanceDeleteResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceListRequest$Type extends MessageType<InstanceListRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceListRequest', []);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceListRequest
 */
export const InstanceListRequest = new InstanceListRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceListResponse$Type extends MessageType<InstanceListResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceListResponse', [
      {
        no: 1,
        name: 'instances',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => InstanceListResponse_Instance,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceListResponse
 */
export const InstanceListResponse = new InstanceListResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceListResponse_Instance$Type extends MessageType<InstanceListResponse_Instance> {
  constructor() {
    super('pistonpanel.v1.InstanceListResponse.Instance', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: 'friendly_name',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 5, name: 'icon', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 3,
        name: 'state',
        kind: 'enum',
        T: () => ['pistonpanel.v1.InstanceState', InstanceState],
      },
      {
        no: 4,
        name: 'instance_permissions',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => InstancePermissionState,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceListResponse.Instance
 */
export const InstanceListResponse_Instance =
  new InstanceListResponse_Instance$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstancePermissionState$Type extends MessageType<InstancePermissionState> {
  constructor() {
    super('pistonpanel.v1.InstancePermissionState', [
      {
        no: 1,
        name: 'instance_permission',
        kind: 'enum',
        T: () => ['pistonpanel.v1.InstancePermission', InstancePermission],
      },
      { no: 2, name: 'granted', kind: 'scalar', T: 8 /*ScalarType.BOOL*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstancePermissionState
 */
export const InstancePermissionState = new InstancePermissionState$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfoRequest$Type extends MessageType<InstanceInfoRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceInfoRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceInfoRequest
 */
export const InstanceInfoRequest = new InstanceInfoRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceInfoResponse$Type extends MessageType<InstanceInfoResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceInfoResponse', [
      {
        no: 1,
        name: 'friendly_name',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 5, name: 'icon', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 3,
        name: 'state',
        kind: 'enum',
        T: () => ['pistonpanel.v1.InstanceState', InstanceState],
      },
      {
        no: 4,
        name: 'instance_permissions',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => InstancePermissionState,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceInfoResponse
 */
export const InstanceInfoResponse = new InstanceInfoResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceUpdateMetaRequest$Type extends MessageType<InstanceUpdateMetaRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceUpdateMetaRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: 'friendly_name',
        kind: 'scalar',
        oneof: 'meta',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'icon',
        kind: 'scalar',
        oneof: 'meta',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceUpdateMetaRequest
 */
export const InstanceUpdateMetaRequest = new InstanceUpdateMetaRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceUpdateMetaResponse$Type extends MessageType<InstanceUpdateMetaResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceUpdateMetaResponse', []);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceUpdateMetaResponse
 */
export const InstanceUpdateMetaResponse = new InstanceUpdateMetaResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceStateChangeRequest$Type extends MessageType<InstanceStateChangeRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceStateChangeRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: 'state',
        kind: 'enum',
        T: () => ['pistonpanel.v1.InstanceState', InstanceState],
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceStateChangeRequest
 */
export const InstanceStateChangeRequest = new InstanceStateChangeRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceStateChangeResponse$Type extends MessageType<InstanceStateChangeResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceStateChangeResponse', []);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceStateChangeResponse
 */
export const InstanceStateChangeResponse =
  new InstanceStateChangeResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceAuditLogRequest$Type extends MessageType<InstanceAuditLogRequest> {
  constructor() {
    super('pistonpanel.v1.InstanceAuditLogRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceAuditLogRequest
 */
export const InstanceAuditLogRequest = new InstanceAuditLogRequest$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceAuditLogResponse$Type extends MessageType<InstanceAuditLogResponse> {
  constructor() {
    super('pistonpanel.v1.InstanceAuditLogResponse', [
      {
        no: 1,
        name: 'entry',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => InstanceAuditLogResponse_AuditLogEntry,
      },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceAuditLogResponse
 */
export const InstanceAuditLogResponse = new InstanceAuditLogResponse$Type();

// @generated message type with reflection information, may provide speed optimized methods
class InstanceAuditLogResponse_AuditLogEntry$Type extends MessageType<InstanceAuditLogResponse_AuditLogEntry> {
  constructor() {
    super('pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntry', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: 'user', kind: 'message', T: () => InstanceUser },
      {
        no: 3,
        name: 'type',
        kind: 'enum',
        T: () => [
          'pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntryType',
          InstanceAuditLogResponse_AuditLogEntryType,
        ],
      },
      { no: 4, name: 'timestamp', kind: 'message', T: () => Timestamp },
      { no: 5, name: 'data', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}

/**
 * @generated MessageType for protobuf message pistonpanel.v1.InstanceAuditLogResponse.AuditLogEntry
 */
export const InstanceAuditLogResponse_AuditLogEntry =
  new InstanceAuditLogResponse_AuditLogEntry$Type();
/**
 * @generated ServiceType for protobuf service pistonpanel.v1.InstanceService
 */
export const InstanceService = new ServiceType(
  'pistonpanel.v1.InstanceService',
  [
    {
      name: 'CreateInstance',
      options: {},
      I: InstanceCreateRequest,
      O: InstanceCreateResponse,
    },
    {
      name: 'DeleteInstance',
      options: {},
      I: InstanceDeleteRequest,
      O: InstanceDeleteResponse,
    },
    {
      name: 'ListInstances',
      options: {},
      I: InstanceListRequest,
      O: InstanceListResponse,
    },
    {
      name: 'GetInstanceInfo',
      options: {},
      I: InstanceInfoRequest,
      O: InstanceInfoResponse,
    },
    {
      name: 'UpdateInstanceMeta',
      options: {},
      I: InstanceUpdateMetaRequest,
      O: InstanceUpdateMetaResponse,
    },
    {
      name: 'ChangeInstanceState',
      options: {},
      I: InstanceStateChangeRequest,
      O: InstanceStateChangeResponse,
    },
    {
      name: 'GetAuditLog',
      options: {},
      I: InstanceAuditLogRequest,
      O: InstanceAuditLogResponse,
    },
  ],
);
