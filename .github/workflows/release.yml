name: 'publish'

on:
  workflow_dispatch:
    inputs:
      app-version:
        description: 'Version to release'
        required: true
      server-version:
        description: 'Server version to use for release'
        required: true

jobs:
  set-server-version:
    uses: AlexProgrammerDE/SoulFireClient/.github/workflows/set-server-version.yml@main
    with:
      version: ${{ inputs.server-version }}
    secrets: inherit

  set-version:
    needs: set-server-version
    uses: AlexProgrammerDE/SoulFireClient/.github/workflows/set-version.yml@main
    with:
      version: ${{ inputs.app-version }}
    secrets: inherit

  push-release-branch:
    needs: set-version
    name: Push Release Branch

    permissions:
      contents: write

    runs-on: ubuntu-24.04
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Push to release branch'
        uses: ad-m/github-push-action@master
        with:
          branch: 'release'

  prepare-release:
    needs: set-version
    name: Prepare Release

    permissions:
      contents: write

    runs-on: ubuntu-24.04
    outputs:
      release_id: ${{ steps.init-release.outputs.result }}
      tag_name: ${{ steps.get-version.outputs.package-version }}

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 'Get Version'
        id: get-version
        run: |
          packageVersion=$(node -p "require('./package.json').version")
          echo "package-version=$packageVersion" >> $GITHUB_OUTPUT

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          mode: COMMIT
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "## Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## Performance",
                    "labels": ["perf"]
                },
                {
                    "title": "## Refactor",
                    "labels": ["refactor"]
                },
                {
                    "title": "## Documentation",
                    "labels": ["docs"]
                },
                {
                    "title": "## Build",
                    "labels": ["build", "chore", "ci"]
                },
                {
                    "title": "## Style",
                    "labels": ["style"]
                },
                {
                    "title": "## Test",
                    "labels": ["test"]
                },
                {
                    "title": "## Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: init-release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          tag_name: ${{ steps.get-version.outputs.package-version }}
          generate_release_notes: false
          draft: true
          prerelease: false
          target_commitish: main
          token: ${{ secrets.GITHUB_TOKEN }}
          name: SoulFireClient ${{ steps.get-version.outputs.package-version }}

  build-tauri:
    needs: prepare-release
    name: Build ${{ matrix.name }}
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-15'
            args: '--target aarch64-apple-darwin'
            target-path: '/aarch64-apple-darwin'
            name: 'macOS 15 (AARCH64)'
            rust-targets: 'aarch64-apple-darwin'
            type: 'macos-aarch64'
          - platform: 'macos-13'
            args: '--target x86_64-apple-darwin'
            target-path: '/x86_64-apple-darwin'
            name: 'macOS 13 (AMD64)'
            rust-targets: 'x86_64-apple-darwin'
            type: 'macos-amd64'
          - platform: 'ubuntu-22.04'
            args: ''
            target-path: ''
            name: 'Ubuntu 22.04'
            rust-targets: ''
            type: 'linux'
          - platform: 'windows-2025'
            args: ''
            target-path: ''
            name: 'Windows Server 2025'
            rust-targets: ''
            type: 'windows'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 'Shared: Checkout Repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 'Shared: Set up nasm'
        uses: ilammy/setup-nasm@v1

      - name: 'Shared: Setup node'
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 'Shared: Install pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 'Shared: Install Rust toolchain'
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.rust-targets }}

      - name: 'Desktop: Cache dependencies'
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.type }}
          workspaces: src-tauri
          cache-on-failure: true
          cache-all-crates: true

      - name: 'Ubuntu: Install dependencies'
        if: matrix.type == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf jq

      - name: 'Shared: Install frontend dependencies'
        run: pnpm install

      - name: 'Desktop: Build tauri project'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          includeDebug: false
          includeRelease: true
          args: ${{ matrix.args }}

      - name: 'Desktop: Upload artifacts (Ubuntu)'
        uses: softprops/action-gh-release@v2
        if: matrix.type == 'linux'
        with:
          tag_name: ${{ needs.prepare-release.outputs.tag_name }}
          draft: true
          files: |
            ./src-tauri/target${{ matrix.target-path }}/release/bundle/appimage/*.AppImage
            ./src-tauri/target${{ matrix.target-path }}/release/bundle/deb/*.deb

      - name: 'Desktop: Upload artifacts (macOS)'
        uses: softprops/action-gh-release@v2
        if: matrix.type == 'macos-amd64' || matrix.type == 'macos-aarch64'
        with:
          tag_name: ${{ needs.prepare-release.outputs.tag_name }}
          draft: true
          files: |
            ./src-tauri/target${{ matrix.target-path }}/release/bundle/dmg/*.dmg
            ./src-tauri/target${{ matrix.target-path }}/release/bundle/macos/*.app

      - name: 'Windows: Upload unsigned artifact'
        id: upload-unsigned-artifact
        if: matrix.type == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-unsigned
          path: |
            ./src-tauri/target${{ matrix.target-path }}/release/bundle/nsis/*.exe
          if-no-files-found: error

      - name: 'Windows: Notify Admin'
        if: matrix.type == 'windows'
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.ADMIN_WEBHOOK_URL }}
          content: <@864603174899941376> Permit the signing request for SoulFireClient ${{ needs.prepare-release.outputs.tag_name }} https://app.signpath.io/Web/e091b552-3623-4d9d-83d7-059d8f32978b/SigningRequests

      - name: 'Windows: Submit signing request'
        if: matrix.type == 'windows'
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: 'e091b552-3623-4d9d-83d7-059d8f32978b'
          project-slug: 'SoulFireClient'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: '/signed'

      - name: 'Windows: Upload signed artifact'
        if: matrix.type == 'windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare-release.outputs.tag_name }}
          draft: true
          files: |
            ./signed/*.exe

  publish-release:
    needs: [build-tauri, prepare-release]
    name: Publish Release

    permissions:
      contents: write

    runs-on: ubuntu-24.04
    steps:
      - name: 'Publish Release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare-release.outputs.tag_name }}
          draft: false

      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: <@&850705047938793503> New SoulFireClient version released!
          embed-title: SoulFireClient ${{ needs.prepare-release.outputs.tag_name }}
          embed-description: SoulFireClient ${{ needs.prepare-release.outputs.tag_name }} has been released! Changelog and download can be found at https://github.com/AlexProgrammerDE/SoulFireClient/releases/tag/${{ needs.prepare-release.outputs.tag_name }}
          embed-color: 3312063
          embed-thumbnail-url: https://soulfiremc.com/logo.png
