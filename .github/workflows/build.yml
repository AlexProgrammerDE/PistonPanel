name: 'test'

on:
  - push

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            type: 'desktop'
            args: '--target aarch64-apple-darwin'
            targetPath: '/aarch64-apple-darwin'
            name: 'macos-aarch64'
            rust-targets: 'aarch64-apple-darwin'
          - platform: 'macos-latest'
            type: 'desktop'
            args: '--target x86_64-apple-darwin'
            targetPath: '/x86_64-apple-darwin'
            name: 'macos-x86_64'
            rust-targets: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            type: 'desktop'
            args: ''
            targetPath: ''
            name: 'linux'
            rust-targets: ''
          - platform: 'windows-latest'
            type: 'desktop'
            args: ''
            targetPath: ''
            name: 'windows'
            rust-targets: ''
          - platform: 'ubuntu-22.04'
            type: 'android'
            args: ''
            targetPath: ''
            name: 'android'
            rust-targets: 'aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: ilammy/setup-nasm@v1
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.rust-targets }}

      - name: set up cargo cache
        uses: actions/cache@v4
        if: matrix.type != 'android'
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ matrix.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.name }}-cargo-

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' && matrix.type == 'desktop'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install dependencies (android only)
        if: matrix.type == 'android'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake golang-go libunwind-dev

      - name: Set up JDK 21
        if: matrix.type == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        if: matrix.type == 'android'
        uses: android-actions/setup-android@v3

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        if: matrix.type == 'android'
        with:
          ndk-version: r26d
          link-to-sdk: false
          add-to-path: false

      - name: install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        if: matrix.type == 'desktop'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          args: ${{ matrix.args }}

      - name: install tauri cli
        if: matrix.type == 'android'
        run: |
          cargo install tauri-cli
          cargo install --force --locked bindgen-cli

      - name: Decode JKS file
        if: matrix.type == 'android'
        run: |
          echo "${{ secrets.TAURI_ANDROID_KEYSTORE_FILE }}" | base64 --decode > /tmp/keystore.jks

      - name: Configure android build
        if: matrix.type == 'android'
        run: |
          cat <<EOF > src-tauri/gen/android/keystore.properties
          password=${{ secrets.TAURI_ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=upload
          storeFile=/tmp/keystore.jks
          EOF

      - name: build android project
        if: matrix.type == 'android'
        run: |
          export ANDROID_SDK_HOME=$ANDROID_HOME
          export PATH=$PATH:$ANDROID_HOME/tools
          export PATH=$PATH:$ANDROID_HOME/platform-tools

          export ANDROID_NDK=$NDK_HOME
          export ANDROID_NDK_HOME=$NDK_HOME
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH

          cargo tauri android build
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - uses: actions/upload-artifact@v4
        id: upload-desktop-artifact
        if: matrix.type == 'desktop'
        with:
          name: tauri-artifact-${{ matrix.name }}
          path: './src-tauri/target${{ matrix.targetPath }}/release/bundle'

      - uses: signpath/github-action-submit-signing-request@v1
        if: matrix.type == 'desktop'
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: 'e091b552-3623-4d9d-83d7-059d8f32978b'
          project-slug: 'SoulFireClient'
          signing-policy-slug: 'test-signing'
          github-artifact-id: '${{ steps.upload-desktop-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: '/path/to/signed/artifact/directory'

      - uses: actions/upload-artifact@v4
        if: matrix.type == 'android'
        with:
          name: tauri-artifact-${{ matrix.name }}
          path: './src-tauri/gen/android/app/build/outputs'
